(()=>{"use strict";var __webpack_modules__={580:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n;// ./src/assets/images/background-image.jpg\nconst background_image_namespaceObject = __webpack_require__.p + "assets/b433f9d3f3d21c4d77cd.jpg";\n;// ./src/modules/Header.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Header = /*#__PURE__*/function () {\n  function Header() {\n    _classCallCheck(this, Header);\n  }\n  _createClass(Header, [{\n    key: "renderHeader",\n    value:\n    // DOM methods\n    function renderHeader(location) {\n      var header = document.createElement(\'header\');\n      header.innerHTML = "\\n      <div class=\\"bg-image\\" style=\\"background-image: url(".concat(background_image_namespaceObject, ")\\"></div>\\n      <h1>Build Your Reading List</h1>\\n    ");\n      document.querySelector(location).appendChild(header);\n    }\n  }]);\n  return Header;\n}();\n/* harmony default export */ const modules_Header = (Header);\n;// ./src/modules/Footer.js\nfunction Footer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Footer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction Footer_createClass(Constructor, protoProps, staticProps) { if (protoProps) Footer_defineProperties(Constructor.prototype, protoProps); if (staticProps) Footer_defineProperties(Constructor, staticProps); return Constructor; }\nvar Footer = /*#__PURE__*/function () {\n  function Footer() {\n    Footer_classCallCheck(this, Footer);\n  }\n  Footer_createClass(Footer, [{\n    key: "renderFooter",\n    value:\n    // DOM methods\n    function renderFooter(location) {\n      var footer = document.createElement(\'footer\');\n      footer.innerHTML = "Created by <a href=\\"https://autumnchris.github.io/portfolio\\" target=\\"_blank\\">Autumn Bullard</a> &copy; ".concat(new Date().getFullYear());\n      document.querySelector(location).appendChild(footer);\n    }\n  }]);\n  return Footer;\n}();\n/* harmony default export */ const modules_Footer = (Footer);\n;// ./src/utils/getLocalStorage.js\nfunction getLocalStorage(key) {\n  return JSON.parse(localStorage.getItem(key));\n}\n;// ./src/utils/setToLocalStorage.js\nfunction setToLocalStorage(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n;// ./src/utils/getReadingList.js\n\n\nfunction getReadingList(value) {\n  if (value) setToLocalStorage(\'readingList\', value);\n  return getLocalStorage(\'readingList\') || [];\n}\n;// ./src/modules/Sidebar.js\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction Sidebar_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Sidebar_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction Sidebar_createClass(Constructor, protoProps, staticProps) { if (protoProps) Sidebar_defineProperties(Constructor.prototype, protoProps); if (staticProps) Sidebar_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Sidebar = /*#__PURE__*/function () {\n  function Sidebar() {\n    Sidebar_classCallCheck(this, Sidebar);\n  }\n  Sidebar_createClass(Sidebar, [{\n    key: "renderReadingListStats",\n    value:\n    // DOM methods\n    function renderReadingListStats(location) {\n      var readingListStats = document.createElement(\'div\');\n      readingListStats.classList.add(\'reading-list-stats\');\n      readingListStats.innerHTML = "\\n      <div class=\\"stat\\"><span class=\\"stat-label\\">Books</span> ".concat(_toConsumableArray(getReadingList()).length, "</div>\\n      <div class=\\"stat\\"><span class=\\"stat-label\\">Read</span> ").concat(_toConsumableArray(getReadingList()).filter(function (book) {\n        return book.read;\n      }).length, "</div>\\n      <div class=\\"stat\\"><span class=\\"stat-label\\">Unread</span> ").concat(_toConsumableArray(getReadingList()).filter(function (book) {\n        return !book.read;\n      }).length, "</div>\\n    ");\n      document.querySelector(location).appendChild(readingListStats);\n    }\n  }, {\n    key: "removeReadingListStats",\n    value: function removeReadingListStats(location) {\n      var readingListStats = document.querySelector("".concat(location, " .reading-list-stats"));\n      readingListStats ? document.querySelector(location).removeChild(readingListStats) : null;\n    }\n  }, {\n    key: "renderSidebar",\n    value: function renderSidebar(location) {\n      var sidebar = document.createElement(\'aside\');\n      sidebar.classList.add(\'col\', \'sidebar\');\n      sidebar.innerHTML = "\\n      <div class=\\"button-group\\">\\n        <button type=\\"button\\" class=\\"button add-book-button\\"><span class=\\"icon fa-solid fa-plus\\" aria-hidden=\\"true\\"></span> Add Book</button>\\n      </div>\\n    ";\n      document.querySelector(location).appendChild(sidebar);\n      this.renderReadingListStats(\'.sidebar\');\n    }\n  }]);\n  return Sidebar;\n}();\n/* harmony default export */ const modules_Sidebar = (Sidebar);\n;// ./src/modules/InfoMessage.js\nfunction InfoMessage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction InfoMessage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction InfoMessage_createClass(Constructor, protoProps, staticProps) { if (protoProps) InfoMessage_defineProperties(Constructor.prototype, protoProps); if (staticProps) InfoMessage_defineProperties(Constructor, staticProps); return Constructor; }\nvar InfoMessage = /*#__PURE__*/function () {\n  function InfoMessage() {\n    InfoMessage_classCallCheck(this, InfoMessage);\n  }\n  InfoMessage_createClass(InfoMessage, [{\n    key: "renderInfoMessage",\n    value:\n    // DOM methods\n    function renderInfoMessage(message, location) {\n      var infoMessage = document.createElement(\'p\');\n      infoMessage.classList.add(\'message\', \'info-message\');\n      infoMessage.innerHTML = "<span class=\\"fa-solid fa-circle-info fa-lg fa-fw\\" aria-hidden=\\"true\\"></span> ".concat(message);\n      document.querySelector(location).appendChild(infoMessage);\n    }\n  }, {\n    key: "removeInfoMessage",\n    value: function removeInfoMessage(location) {\n      var infoMessage = document.querySelector("".concat(location, " .info-message"));\n      infoMessage ? document.querySelector(location).removeChild(infoMessage) : null;\n    }\n  }]);\n  return InfoMessage;\n}();\n/* harmony default export */ const modules_InfoMessage = (InfoMessage);\n;// ./src/modules/FilterSortForm.js\nfunction FilterSortForm_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction FilterSortForm_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction FilterSortForm_createClass(Constructor, protoProps, staticProps) { if (protoProps) FilterSortForm_defineProperties(Constructor.prototype, protoProps); if (staticProps) FilterSortForm_defineProperties(Constructor, staticProps); return Constructor; }\nvar FilterSortForm = /*#__PURE__*/function () {\n  function FilterSortForm() {\n    FilterSortForm_classCallCheck(this, FilterSortForm);\n  }\n  FilterSortForm_createClass(FilterSortForm, [{\n    key: "renderFilterSortForm",\n    value:\n    // DOM methods\n    function renderFilterSortForm(location, filterSortFormData) {\n      var filterSortForm = document.createElement(\'form\');\n      filterSortForm.classList.add(\'filter-sort-form\');\n      filterSortForm.setAttribute(\'novalidate\', \'true\');\n      filterSortForm.innerHTML = "\\n      <div class=\\"row row-search\\">\\n        <div class=\\"form-group\\">\\n          <label for=\\"search-value\\">Filter by Keyword</label>\\n          <input type=\\"text\\" name=\\"searchValue\\" class=\\"search-value\\" value=\\"".concat(filterSortFormData.searchValue, "\\" placeholder=\\"Find a book...\\" id=\\"search-value\\" autoComplete=\\"off\\" autocapitalize=\\"off\\" />\\n        </div>\\n      </div>\\n      <div class=\\"row row-select\\">\\n        <div class=\\"form-group\\">\\n          <label for=\\"filter-read-value\\">Filter by Read Status</label>\\n          <div class=\\"select-wrapper\\">\\n            <select name=\\"filterReadValue\\" id=\\"filter-read-value\\" autoComplete=\\"off\\">\\n              <option value=\\"all\\" ").concat(filterSortFormData.filterReadValue === \'all\' ? \'selected\' : \'\', ">All</option>\\n              <option value=\\"read\\" ").concat(filterSortFormData.filterReadValue === \'read\' ? \'selected\' : \'\', ">Read</option>\\n              <option value=\\"unread\\" ").concat(filterSortFormData.filterReadValue === \'unread\' ? \'selected\' : \'\', ">Unread</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\"form-group\\">\\n          <label for=\\"sort-value\\">Order by</label>\\n          <div class=\\"select-wrapper\\">\\n            <select name=\\"sortValue\\" id=\\"sort-value\\" autoComplete=\\"off\\">\\n              <option value=\\"title\\" ").concat(filterSortFormData.sortValue === \'title\' ? \'selected\' : \'\', ">Title</option>\\n              <option value=\\"first-name\\" ").concat(filterSortFormData.sortValue === \'first-name\' ? \'selected\' : \'\', ">Author: First Name</option>\\n              <option value=\\"last-name\\" ").concat(filterSortFormData.sortValue === \'last-name\' ? \'selected\' : \'\', ">Author: Last Name</option>\\n              <option value=\\"pages-least\\" ").concat(filterSortFormData.sortValue === \'pages-least\' ? \'selected\' : \'\', ">Pages: Least to Greatest</option>\\n              <option value=\\"pages-greatest\\" ").concat(filterSortFormData.sortValue === \'pages-greatest\' ? \'selected\' : \'\', ">Pages: Greatest to Least</option>\\n            </select>\\n          </div>\\n        </div>\\n      </div>\\n    ");\n      document.querySelector(location).appendChild(filterSortForm);\n    }\n  }]);\n  return FilterSortForm;\n}();\n/* harmony default export */ const modules_FilterSortForm = (FilterSortForm);\n;// ./src/modules/ReadingList.js\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction ReadingList_toConsumableArray(arr) { return ReadingList_arrayWithoutHoles(arr) || ReadingList_iterableToArray(arr) || ReadingList_unsupportedIterableToArray(arr) || ReadingList_nonIterableSpread(); }\nfunction ReadingList_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction ReadingList_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return ReadingList_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ReadingList_arrayLikeToArray(o, minLen); }\nfunction ReadingList_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\nfunction ReadingList_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return ReadingList_arrayLikeToArray(arr); }\nfunction ReadingList_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction ReadingList_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction ReadingList_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction ReadingList_createClass(Constructor, protoProps, staticProps) { if (protoProps) ReadingList_defineProperties(Constructor.prototype, protoProps); if (staticProps) ReadingList_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar ReadingList = /*#__PURE__*/function () {\n  function ReadingList() {\n    ReadingList_classCallCheck(this, ReadingList);\n    this.infoMessage = new modules_InfoMessage();\n    this.sidebar = new modules_Sidebar();\n    this.filterSortForm = new modules_FilterSortForm();\n    this.viewableReadingList = ReadingList_toConsumableArray(getReadingList());\n    this.filterSortFormData = {\n      searchValue: \'\',\n      filterReadValue: \'all\',\n      sortValue: \'title\'\n    };\n    this.editBookFormData = {\n      title: \'\',\n      author: \'\',\n      pages: \'\',\n      read: false,\n      id: null\n    };\n  }\n\n  // Update filterSortFormData variable when the Filter/Sort form inputs change\n  ReadingList_createClass(ReadingList, [{\n    key: "handleChange",\n    value: function handleChange(event) {\n      this.filterSortFormData = _objectSpread(_objectSpread({}, this.filterSortFormData), {}, _defineProperty({}, event.target.name, event.target.value));\n      this.updateViewableReadingList();\n    }\n\n    // Update viewable reading list based on Filter/Sort form inputs\n  }, {\n    key: "updateViewableReadingList",\n    value: function updateViewableReadingList() {\n      if (document.querySelector(\'.filter-sort-form\')) {\n        this.filterSortFormData.searchValue = document.getElementById(\'search-value\').value;\n        this.filterSortFormData.filterReadValue = document.getElementById(\'filter-read-value\').value;\n        this.filterSortFormData.sortValue = document.getElementById(\'sort-value\').value;\n      }\n      var viewableReadingListData = ReadingList_toConsumableArray(getReadingList());\n      viewableReadingListData = this.searchReadingList(this.filterSortFormData.searchValue, viewableReadingListData);\n      viewableReadingListData = this.filterByReadStatus(this.filterSortFormData.filterReadValue, viewableReadingListData);\n      viewableReadingListData = this.sortBooks(this.filterSortFormData.sortValue, viewableReadingListData);\n      this.viewableReadingList = viewableReadingListData;\n      if (ReadingList_toConsumableArray(getReadingList()).length === 0) {\n        this.removeReadingListContent(\'.reading-list-container\');\n        this.renderReadingListContent(ReadingList_toConsumableArray(getReadingList()), \'.reading-list-container\');\n      } else {\n        this.removeReadingList(\'.reading-list-content\');\n        this.renderReadingList(viewableReadingListData, \'.reading-list-content\');\n      }\n    }\n\n    // Filter viewable reading list by search input\n  }, {\n    key: "searchReadingList",\n    value: function searchReadingList(value, viewableReadingListData) {\n      value = value.toLowerCase();\n      if (value) {\n        return viewableReadingListData.filter(function (book) {\n          return book.title.toLowerCase().includes(value) || book.author.toLowerCase().includes(value);\n        });\n      } else {\n        return viewableReadingListData;\n      }\n    }\n\n    // Filter viewable reading list by Read status\n  }, {\n    key: "filterByReadStatus",\n    value: function filterByReadStatus(value, viewableReadingListData) {\n      viewableReadingListData = viewableReadingListData.filter(function (book) {\n        if (value === \'read\') {\n          return book.read;\n        } else if (value === \'unread\') {\n          return !book.read;\n        } else {\n          return book;\n        }\n      });\n      return viewableReadingListData;\n    }\n\n    // Sort viewable reading list\n  }, {\n    key: "sortBooks",\n    value: function sortBooks(value, viewableReadingListData) {\n      viewableReadingListData = viewableReadingListData.sort(function (a, b) {\n        var authorNameA = a.author.toLowerCase().split(\' \');\n        var authorNameB = b.author.toLowerCase().split(\' \');\n        var lastNameA = authorNameA[authorNameA.length - 1];\n        var lastNameB = authorNameB[authorNameB.length - 1];\n        var firstNameA = authorNameA[0];\n        var firstNameB = authorNameB[0];\n        switch (value) {\n          case \'title\':\n            return a.title.toLowerCase().localeCompare(b.title.toLowerCase());\n          case \'first-name\':\n            if (lastNameA === lastNameB && firstNameA === firstNameB && authorNameA.length > authorNameB.length) {\n              return authorNameB.join(\' \').localeCompare(authorNameA.join(\' \'));\n            } else {\n              return authorNameA.join(\' \').localeCompare(authorNameB.join(\' \'));\n            }\n          case \'last-name\':\n            if (lastNameA === lastNameB) {\n              authorNameA.pop();\n              authorNameB.pop();\n              return authorNameA.join(\' \').localeCompare(authorNameB.join(\' \'));\n            } else {\n              return lastNameA.localeCompare(lastNameB);\n            }\n          case \'pages-least\':\n            return a.pages - b.pages;\n          case \'pages-greatest\':\n            return b.pages - a.pages;\n        }\n      });\n      return viewableReadingListData;\n    }\n\n    // Add a new book to the reading list\n  }, {\n    key: "addNewBook",\n    value: function addNewBook(newBook, readingListData) {\n      var wasEmpty = readingListData.length === 0;\n      readingListData.push(newBook);\n      getReadingList(readingListData);\n      if (wasEmpty) {\n        this.filterSortForm.renderFilterSortForm(\'.reading-list-content\', this.filterSortFormData);\n      }\n      this.updateViewableReadingList();\n      this.sidebar.removeReadingListStats(\'.sidebar\');\n      this.sidebar.renderReadingListStats(\'.sidebar\');\n    }\n\n    // Edit a book in the reading list\n  }, {\n    key: "editBook",\n    value: function editBook(editBookFormData, bookID, readingListData) {\n      readingListData = readingListData.map(function (book) {\n        if (book.id === Number(bookID)) {\n          return _objectSpread(_objectSpread({}, book), {}, {\n            title: editBookFormData.title,\n            author: editBookFormData.author,\n            pages: editBookFormData.pages,\n            read: editBookFormData.read\n          });\n        } else {\n          return book;\n        }\n      });\n      getReadingList(readingListData);\n      this.updateViewableReadingList();\n      this.sidebar.removeReadingListStats(\'.sidebar\');\n      this.sidebar.renderReadingListStats(\'.sidebar\');\n    }\n\n    // Delete a book from the reading list\n  }, {\n    key: "deleteBook",\n    value: function deleteBook(readingListData, bookID) {\n      if (confirm(\'Are you sure you want to remove this book from your reading list?\')) {\n        readingListData = readingListData.filter(function (book) {\n          return book.id !== Number(bookID);\n        });\n        getReadingList(readingListData);\n        this.updateViewableReadingList();\n        this.sidebar.removeReadingListStats(\'.sidebar\');\n        this.sidebar.renderReadingListStats(\'.sidebar\');\n      }\n    }\n\n    // Toggle a book\'s read status in the reading list\n  }, {\n    key: "toggleRead",\n    value: function toggleRead(event, bookID, readingListData) {\n      if (event.type === \'click\' && !event.target.matches(\'input[type=checkbox]\')) return;\n      if (event.key === \'Enter\') {\n        event.preventDefault();\n        document.getElementById("read-".concat(bookID)).checked = !document.getElementById("read-".concat(bookID)).checked;\n      }\n      if (event.key === \'Enter\' || event.type === \'click\') {\n        readingListData = readingListData.map(function (book) {\n          if (book.id === Number(bookID)) {\n            return _objectSpread(_objectSpread({}, book), {}, {\n              read: !book.read\n            });\n          }\n          return book;\n        });\n        getReadingList(readingListData);\n        this.updateViewableReadingList();\n        this.sidebar.removeReadingListStats(\'.sidebar\');\n        this.sidebar.renderReadingListStats(\'.sidebar\');\n      }\n    }\n\n    // DOM methods\n  }, {\n    key: "renderBooks",\n    value: function renderBooks(readingListData) {\n      var readingList = document.querySelector(\'.reading-list\');\n      readingList.innerHTML = readingListData.map(function (book) {\n        return "\\n        <div class=\\"book-card\\">\\n          <div class=\\"row\\">\\n            <div class=\\"title\\">".concat(book.title, "</div>\\n            <div class=\\"button-group\\">\\n              <button type=\\"button\\" class=\\"button edit-book-button\\" data-id=\\"").concat(book.id, "\\" aria-label=\\"edit book ").concat(book.title, " by ").concat(book.author, "\\" title=\\"Edit\\">\\n                <span class=\\"fa-solid fa-pencil fa-sm fa-fw icon\\"></span>\\n              </button>\\n              <button type=\\"button\\" class=\\"button delete-book-button\\" data-id=\\"").concat(book.id, "\\" aria-label=\\"delete book ").concat(book.title, " by ").concat(book.author, "\\" title=\\"Delete\\">\\n                <span class=\\"fa-solid fa-trash fa-sm icon\\"></span>\\n              </button>\\n            </div>\\n          </div>\\n          <div class=\\"row\\">\\n            <div class=\\"book-info author\\"><span class=\\"book-info-label\\">by </span>").concat(book.author, "</div>\\n            <div class=\\"book-info pages\\"><span class=\\"book-info-label\\">Pages </span>").concat(book.pages, "</div>\\n            <form novalidate>\\n              <div class=\\"form-group\\">\\n                <label class=\\"check-label\\" for=\\"read-").concat(book.id, "\\">Read\\n                  <input type=\\"checkbox\\" name=\\"readValue\\" tabindex=\\"-1\\" data-id=\\"").concat(book.id, "\\" id=\\"read-").concat(book.id, "\\" autocomplete=\\"off\\" ").concat(book.read ? \'checked\' : \'\', " />\\n                  <span class=\\"checkmark\\" tabindex=\\"0\\" data-id=\\"").concat(book.id, "\\"></span>\\n                </label>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      ");\n      }).join(\'\');\n    }\n  }, {\n    key: "renderReadingList",\n    value: function renderReadingList(readingListData, location) {\n      var readingList = document.createElement(\'div\');\n      readingList.classList.add(\'reading-list\');\n      document.querySelector(location).appendChild(readingList);\n      this.infoMessage.removeInfoMessage(\'.reading-list-content\');\n      if (readingListData.length === 0) {\n        this.infoMessage.renderInfoMessage(\'No results match your search specifications.\', \'.reading-list-content\');\n      } else {\n        this.infoMessage.removeInfoMessage(\'.reading-list-content\');\n        this.renderBooks(readingListData);\n      }\n    }\n  }, {\n    key: "removeReadingList",\n    value: function removeReadingList(location) {\n      var readingList = document.querySelector("".concat(location, " .reading-list"));\n      readingList ? document.querySelector(location).removeChild(readingList) : null;\n    }\n  }, {\n    key: "renderReadingListContent",\n    value: function renderReadingListContent(readingListData, location) {\n      var readingListContent = document.createElement(\'div\');\n      readingListContent.classList.add(\'col\', \'reading-list-content\');\n      document.querySelector(location).appendChild(readingListContent);\n      if (readingListData.length === 0) {\n        this.infoMessage.renderInfoMessage(\'You currently have no books in your reading list. Click the Add Book button to get started.\', \'.reading-list-content\');\n      } else {\n        this.filterSortForm.renderFilterSortForm(\'.reading-list-content\', this.filterSortFormData);\n        this.updateViewableReadingList();\n      }\n    }\n  }, {\n    key: "removeReadingListContent",\n    value: function removeReadingListContent(location) {\n      var readingListContent = document.querySelector("".concat(location, " .reading-list-content"));\n      readingListContent ? document.querySelector(location).removeChild(readingListContent) : null;\n    }\n  }]);\n  return ReadingList;\n}();\n/* harmony default export */ const modules_ReadingList = (ReadingList);\n;// ./src/modules/ErrorMessage.js\nfunction ErrorMessage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction ErrorMessage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction ErrorMessage_createClass(Constructor, protoProps, staticProps) { if (protoProps) ErrorMessage_defineProperties(Constructor.prototype, protoProps); if (staticProps) ErrorMessage_defineProperties(Constructor, staticProps); return Constructor; }\nvar ErrorMessage = /*#__PURE__*/function () {\n  function ErrorMessage() {\n    ErrorMessage_classCallCheck(this, ErrorMessage);\n  }\n  ErrorMessage_createClass(ErrorMessage, [{\n    key: "renderErrorMessage",\n    value:\n    // DOM methods\n    function renderErrorMessage(message, location) {\n      var errorMessage = document.createElement(\'p\');\n      errorMessage.classList.add(\'message\', \'error-message\');\n      errorMessage.innerHTML = "<span class=\\"fa-solid fa-circle-exclamation fa-lg fa-fw\\" aria-hidden=\\"true\\"></span> ".concat(message);\n      document.querySelector(location).appendChild(errorMessage);\n    }\n  }, {\n    key: "removeErrorMessage",\n    value: function removeErrorMessage(location) {\n      var errorMessage = document.querySelector("".concat(location, " .error-message"));\n      errorMessage ? document.querySelector(location).removeChild(errorMessage) : null;\n    }\n  }]);\n  return ErrorMessage;\n}();\n/* harmony default export */ const modules_ErrorMessage = (ErrorMessage);\n;// ./src/modules/Book.js\nfunction Book_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nvar Book = function Book(title, author, pages, read, bookID) {\n  Book_classCallCheck(this, Book);\n  this.title = title;\n  this.author = author;\n  this.pages = pages;\n  this.read = read;\n  this.id = bookID;\n};\n/* harmony default export */ const modules_Book = (Book);\n;// ./src/modules/BookFormModal.js\nfunction BookFormModal_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\nfunction BookFormModal_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { BookFormModal_ownKeys(Object(source), true).forEach(function (key) { BookFormModal_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { BookFormModal_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\nfunction BookFormModal_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction BookFormModal_toConsumableArray(arr) { return BookFormModal_arrayWithoutHoles(arr) || BookFormModal_iterableToArray(arr) || BookFormModal_unsupportedIterableToArray(arr) || BookFormModal_nonIterableSpread(); }\nfunction BookFormModal_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction BookFormModal_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return BookFormModal_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return BookFormModal_arrayLikeToArray(o, minLen); }\nfunction BookFormModal_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\nfunction BookFormModal_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return BookFormModal_arrayLikeToArray(arr); }\nfunction BookFormModal_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction BookFormModal_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction BookFormModal_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction BookFormModal_createClass(Constructor, protoProps, staticProps) { if (protoProps) BookFormModal_defineProperties(Constructor.prototype, protoProps); if (staticProps) BookFormModal_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar BookFormModal = /*#__PURE__*/function () {\n  function BookFormModal() {\n    BookFormModal_classCallCheck(this, BookFormModal);\n    this.errorMessage = new modules_ErrorMessage();\n    this.readingList = new modules_ReadingList();\n    this.bookFormType = null;\n    this.currentBookID = null;\n    this.formValues = {\n      title: \'\',\n      author: \'\',\n      pages: \'\',\n      read: false\n    };\n  }\n\n  // Toggle a book\'s Read status in the Book Form Modal with keyboard\n  BookFormModal_createClass(BookFormModal, [{\n    key: "handleKeyDown",\n    value: function handleKeyDown(event) {\n      if (event.key === \'Enter\') {\n        event.preventDefault();\n        document.getElementById(event.target.dataset.inputId).checked = !document.getElementById(event.target.dataset.inputId).checked;\n        this.formValues.read = document.getElementById(event.target.dataset.inputId).checked;\n      }\n    }\n\n    // Save a book in form modal\n  }, {\n    key: "handleSubmit",\n    value: function handleSubmit(event, formValues) {\n      event.preventDefault();\n      this.errorMessage.removeErrorMessage(\'#modal .modal-body\');\n      formValues.title = formValues.title.trim();\n      formValues.author = formValues.author.trim();\n      formValues.pages = formValues.pages.trim();\n      if (!formValues.title) {\n        this.errorMessage.renderErrorMessage(\'A book title is required to add a new book.\', \'#modal .modal-body\');\n      } else if (!formValues.author) {\n        this.errorMessage.renderErrorMessage(\'An author is required to add a new book.\', \'#modal .modal-body\');\n      } else if (!formValues.pages) {\n        this.errorMessage.renderErrorMessage(\'The number of pages is required to add a new book.\', \'#modal .modal-body\');\n      } else if (isNaN(formValues.pages) || formValues.pages <= 0) {\n        this.errorMessage.renderErrorMessage(\'The number of pages must be a number greater than 0.\', \'#modal .modal-body\');\n      } else {\n        if (this.bookFormType === \'edit\') {\n          this.editBook(formValues, BookFormModal_toConsumableArray(getReadingList()));\n        } else {\n          this.addNewBook(formValues, BookFormModal_toConsumableArray(getReadingList()));\n        }\n        this.closeModal();\n      }\n    }\n\n    // Add a new book to the reading list\n  }, {\n    key: "addNewBook",\n    value: function addNewBook(formValues, readingListData) {\n      var newBook = new modules_Book(formValues.title, formValues.author, formValues.pages, formValues.read, Date.now());\n      this.readingList.addNewBook(newBook, readingListData);\n    }\n\n    // Edit a book in the reading list\n  }, {\n    key: "editBook",\n    value: function editBook(formValues, readingListData) {\n      this.readingList.editBook(formValues, this.currentBookID, readingListData);\n    }\n\n    // Open book form modal\n  }, {\n    key: "openModal",\n    value: function openModal(bookFormType) {\n      var readingListData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var bookID = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var bookToBeEdited;\n      var formData;\n      if (bookFormType === \'edit\') {\n        this.bookFormType = \'edit\';\n        this.currentBookID = bookID;\n        bookToBeEdited = readingListData.find(function (book) {\n          return book.id === Number(bookID);\n        });\n        formData = {\n          title: bookToBeEdited.title,\n          author: bookToBeEdited.author,\n          pages: bookToBeEdited.pages,\n          read: bookToBeEdited.read\n        };\n      } else {\n        this.bookFormType = \'add\';\n        formData = this.formValues;\n      }\n      this.renderBookFormModal(\'main\', formData);\n    }\n\n    // Close book form modal\n  }, {\n    key: "closeModal",\n    value: function closeModal() {\n      this.removeBookFormModal(\'main\');\n      this.formValues = BookFormModal_objectSpread(BookFormModal_objectSpread({}, this.formValues), {}, {\n        title: \'\',\n        author: \'\',\n        pages: \'\',\n        read: false\n      });\n      this.currentBookID = null;\n    }\n\n    // DOM methods\n  }, {\n    key: "renderBookFormModal",\n    value: function renderBookFormModal(location, formData) {\n      var bookFormModal = document.createElement(\'div\');\n      bookFormModal.setAttribute(\'id\', \'modal\');\n      bookFormModal.classList.add(\'modal\');\n      bookFormModal.innerHTML = "\\n      <div class=\\"modal-content\\">\\n        <div class=\\"modal-header\\">".concat(this.bookFormType === \'edit\' ? \'Edit\' : \'Add New\', " Book</div>\\n        <div class=\\"modal-body\\">\\n          <form class=\\"new-book-form\\" novalidate>\\n            <div class=\\"form-group\\">\\n              <label for=\\"title-value\\">Title</label>\\n              <input type=\\"text\\" class=\\"title-value\\" name=\\"title\\" value=\\"").concat(formData.title, "\\" id=\\"title-value\\" autocomplete=\\"off\\" required />\\n            </div>\\n            <div class=\\"form-group\\">\\n              <label for=\\"author-value\\">Author</label>\\n              <input type=\\"text\\" class=\\"author-value\\" name=\\"author\\" value=\\"").concat(formData.author, "\\" id=\\"author-value\\" autocomplete=\\"off\\" required />\\n            </div>\\n            <div class=\\"form-group\\">\\n              <label for=\\"pages-value\\">Number of Pages</label>\\n              <input type=\\"text\\" class=\\"pages-value\\" name=\\"pages\\" inputmode=\\"numeric\\" value=\\"").concat(formData.pages, "\\" id=\\"pages-value\\" autocomplete=\\"off\\" required />\\n            </div>\\n            <div class=\\"form-group\\">\\n              <label class=\\"check-label\\" for=\\"read-value\\">Read\\n                <input type=\\"checkbox\\" name=\\"read\\" tabindex=\\"-1\\" id=\\"read-value\\" ").concat(formData.read ? \'checked\' : \'\', " autocomplete=\\"off\\" />\\n                <span class=\\"checkmark\\" tabindex=\\"0\\" data-input-id=\\"read-value\\"></span>\\n              </label>\\n            </div>\\n            <div class=\\"button-group\\">\\n              <button type=\\"submit\\" class=\\"button modal-button\\">Save</button>\\n              <button type=\\"button\\" class=\\"button modal-button cancel\\">Cancel</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    ");\n      document.querySelector(location).appendChild(bookFormModal);\n      document.querySelector(\'body\').classList.add(\'modal-open\');\n    }\n  }, {\n    key: "removeBookFormModal",\n    value: function removeBookFormModal(location) {\n      var bookFormModal = document.querySelector("".concat(location, " #modal"));\n      bookFormModal ? document.querySelector(location).removeChild(bookFormModal) : null;\n      document.querySelector(\'body\').classList.remove(\'modal-open\');\n    }\n  }]);\n  return BookFormModal;\n}();\n/* harmony default export */ const modules_BookFormModal = (BookFormModal);\n;// ./src/App.js\nfunction App_toConsumableArray(arr) { return App_arrayWithoutHoles(arr) || App_iterableToArray(arr) || App_unsupportedIterableToArray(arr) || App_nonIterableSpread(); }\nfunction App_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction App_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return App_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return App_arrayLikeToArray(o, minLen); }\nfunction App_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\nfunction App_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return App_arrayLikeToArray(arr); }\nfunction App_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction App_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction App_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction App_createClass(Constructor, protoProps, staticProps) { if (protoProps) App_defineProperties(Constructor.prototype, protoProps); if (staticProps) App_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar App = /*#__PURE__*/function () {\n  function App() {\n    App_classCallCheck(this, App);\n    this.header = new modules_Header();\n    this.footer = new modules_Footer();\n    this.sidebar = new modules_Sidebar();\n    this.readingList = new modules_ReadingList();\n    this.bookFormModal = new modules_BookFormModal();\n    this.renderApp();\n    this.events();\n  }\n\n  // Event listeners\n  App_createClass(App, [{\n    key: "events",\n    value: function events() {\n      var _this = this;\n      document.addEventListener(\'click\', function (event) {\n        var element = event.target;\n        element.matches(\'#modal .modal-button.cancel\') ? _this.bookFormModal.closeModal() : null;\n        element.matches(\'#modal\') ? _this.bookFormModal.closeModal() : null;\n        element.matches(\'.book-card .delete-book-button\') ? _this.readingList.deleteBook(App_toConsumableArray(getReadingList()), element.dataset.id) : null;\n        element.matches(\'.book-card .check-label input[type=checkbox]\') ? _this.readingList.toggleRead(event, element.dataset.id, App_toConsumableArray(getReadingList())) : null;\n        element.matches(\'.sidebar .add-book-button\') ? _this.bookFormModal.openModal(\'add\') : null;\n        element.matches(\'.book-card .edit-book-button\') ? _this.bookFormModal.openModal(\'edit\', App_toConsumableArray(getReadingList()), element.dataset.id) : null;\n      });\n      document.addEventListener(\'change\', function (event) {\n        var element = event.target;\n        element.matches(\'.filter-sort-form #filter-read-value\') ? _this.readingList.handleChange(event) : null;\n        element.matches(\'.filter-sort-form #sort-value\') ? _this.readingList.handleChange(event) : null;\n      });\n      document.addEventListener(\'submit\', function (event) {\n        var element = event.target;\n        element.matches(\'#modal .new-book-form\') ? _this.bookFormModal.handleSubmit(event, {\n          title: document.getElementById(\'title-value\').value,\n          author: document.getElementById(\'author-value\').value,\n          pages: document.getElementById(\'pages-value\').value,\n          read: document.getElementById(\'read-value\').checked\n        }) : null;\n        element.matches(\'.filter-sort-form\') ? event.preventDefault() : null;\n      });\n      document.addEventListener(\'keydown\', function (event) {\n        var element = event.target;\n        document.querySelector(\'#modal\') && event.key === \'Escape\' ? _this.bookFormModal.closeModal() : null;\n        element.matches(\'#modal .new-book-form .checkmark\') ? _this.bookFormModal.handleKeyDown(event) : null;\n        element.matches(\'.book-card .checkmark\') ? _this.readingList.toggleRead(event, element.dataset.id, App_toConsumableArray(getReadingList())) : null;\n      });\n      document.addEventListener(\'keyup\', function (event) {\n        var element = event.target;\n        element.matches(\'.filter-sort-form #search-value\') ? _this.readingList.handleChange(event) : null;\n      });\n    }\n\n    // DOM methods\n  }, {\n    key: "renderApp",\n    value: function renderApp() {\n      this.header.renderHeader(\'#app\');\n      this.renderMain(\'#app\');\n      this.footer.renderFooter(\'#app\');\n      this.sidebar.renderSidebar(\'.reading-list-container\');\n      this.readingList.renderReadingListContent(App_toConsumableArray(getReadingList()), \'.reading-list-container\');\n    }\n  }, {\n    key: "renderMain",\n    value: function renderMain(location) {\n      var main = document.createElement(\'main\');\n      main.innerHTML = "<div class=\\"reading-list-container\\"></div>";\n      document.querySelector(location).appendChild(main);\n    }\n  }]);\n  return App;\n}();\n/* harmony default export */ const src_App = (App);\n;// ./node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./src/index.html\n/* harmony default export */ const cjsname_name_ext_src = (__webpack_require__.p + "index.html");\n;// ./node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./src/favicon.ico\n/* harmony default export */ const favicon = (__webpack_require__.p + "favicon.ico");\n;// ./src/index.js\n\n\n\n\n\n\nnew src_App();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///580\n')}},__webpack_require__={};__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var e;__webpack_require__.g.importScripts&&(e=__webpack_require__.g.location+"");var n=__webpack_require__.g.document;if(!e&&n&&(n.currentScript&&"SCRIPT"===n.currentScript.tagName.toUpperCase()&&(e=n.currentScript.src),!e)){var c=n.getElementsByTagName("script");if(c.length)for(var t=c.length-1;t>-1&&(!e||!/^http(s?):/.test(e));)e=c[t--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=e})();var __webpack_exports__={};__webpack_modules__[580](0,__webpack_exports__,__webpack_require__)})();